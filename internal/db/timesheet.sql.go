// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: timesheet.sql

package db

import (
	"context"
)

const createTimesheet = `-- name: CreateTimesheet :exec
INSERT or IGNORE INTO timesheet_data (date,week_begin_date,week_end_date) VALUES (?1,?2,?3)
`

type CreateTimesheetParams struct {
	Date      int64
	WeekStart int64
	WeekEnd   int64
}

func (q *Queries) CreateTimesheet(ctx context.Context, arg CreateTimesheetParams) error {
	_, err := q.db.ExecContext(ctx, createTimesheet, arg.Date, arg.WeekStart, arg.WeekEnd)
	return err
}

const findTimesheet = `-- name: FindTimesheet :one
SELECT date, week_begin_date, week_end_date FROM timesheet_data WHERE date = (?1)
`

func (q *Queries) FindTimesheet(ctx context.Context, date int64) (TimesheetDatum, error) {
	row := q.db.QueryRowContext(ctx, findTimesheet, date)
	var i TimesheetDatum
	err := row.Scan(&i.Date, &i.WeekBeginDate, &i.WeekEndDate)
	return i, err
}
