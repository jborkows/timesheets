// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: timesheet_entry.sql

package db

import (
	"context"
)

const addEntry = `-- name: AddEntry :exec
insert into timesheet_entry_data (holiday, pending, timesheet_date, hours, minutes,comment,task, category) values (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8)
`

type AddEntryParams struct {
	Holiday       bool
	Pending       bool
	TimesheetDate int64
	Hours         int64
	Minutes       int64
	Comment       string
	Task          string
	Category      string
}

func (q *Queries) AddEntry(ctx context.Context, arg AddEntryParams) error {
	_, err := q.db.ExecContext(ctx, addEntry,
		arg.Holiday,
		arg.Pending,
		arg.TimesheetDate,
		arg.Hours,
		arg.Minutes,
		arg.Comment,
		arg.Task,
		arg.Category,
	)
	return err
}

const addHoliday = `-- name: AddHoliday :exec
insert into timesheet_entry_data (holiday, pending, hours, timesheet_date) values (?1, ?2, 8, ?3)
`

type AddHolidayParams struct {
	Holiday       bool
	Pending       bool
	TimesheetDate int64
}

func (q *Queries) AddHoliday(ctx context.Context, arg AddHolidayParams) error {
	_, err := q.db.ExecContext(ctx, addHoliday, arg.Holiday, arg.Pending, arg.TimesheetDate)
	return err
}

const clearPending = `-- name: ClearPending :exec
delete from timesheet_entry_data where timesheet_date = ?1 and pending = 1
`

func (q *Queries) ClearPending(ctx context.Context, timesheetDate int64) error {
	_, err := q.db.ExecContext(ctx, clearPending, timesheetDate)
	return err
}

const clearTimesheetData = `-- name: ClearTimesheetData :exec
delete from timesheet_entry_data where timesheet_date = ?1
`

func (q *Queries) ClearTimesheetData(ctx context.Context, timesheetDate int64) error {
	_, err := q.db.ExecContext(ctx, clearTimesheetData, timesheetDate)
	return err
}
